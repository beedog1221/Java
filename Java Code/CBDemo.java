// demonstrate check boxes

import java.awt.*;
import java.awt.event.*;
import javax.swing.*;

class CBDemo implements ItemListener {
	
	JLabel jlabSelected;
	JLabel jlabChanged;
	JCheckBox jcbAlpha;
	JCheckBox jcbBeta;
	JCheckBox jcbGamma;
	
	CBDemo() {
		// create a new jframe container.
		JFrame jfrm = new JFrame("Demonstrate Check Boxes");
		
		//specify flowlayout for th layout manager.
		jfrm.setLayout(new FlowLayout());
		
		// give the frame an initial size
		jfrm.setSize(280, 120);
		
		// terminate the program when the user closes the application.
		jfrm.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		
		// create empty labels
		jlabSelected = new JLabel("");
		jlabChanged = new JLabel("");
		
		// make check boxes
		jcbAlpha = new JCheckBox("Alpha");
		jcbBeta = new JCheckBox("Beta");
		jcbGamma = new JCheckBox("Gamma");
		
		//events generated by the checkboxes are handled in common
		//by the itemstatechanged() method implemented by CBDemo.
		jcbAlpha.addItemListener(this);
		jcbBeta.addItemListener(this);
		jcbGamma.addItemListener(this);
		
		//add check boxes and labels to the content pane
		jfrm.add(jcbAlpha);
		jfrm.add(jcbBeta);
		jfrm.add(jcbGamma);
		jfrm.add(jlabChanged);
		jfrm.add(jlabSelected);
		
		// display the frame
		jfrm.setVisible(true);
	}
	
	// this is the handler for th check boxes
	public void itemStateChanged(ItemEvent ie) {
		String str = "";
		
		//obtain a reference to the check box that caused the event.
		JCheckBox cb = (JCheckBox) ie.getItem();
		
		// report what check box changed
		if(cb.isSelected())
			jlabChanged.setText(cb.getText() + " was just selected.");
		else
			jlabChanged.setText(cb.getText() + " was just cleared.");
		
		//report all selected boxes
		if(jcbAlpha.isSelected()) {
			str += "Alpha ";
		}
		if(jcbBeta.isSelected()) {
			str += "Beta ";
		}
		if(jcbGamma.isSelected()) {
			str += "Gamma";
		}
		
		jlabSelected.setText("Selected check boxes: " + str);
	}
	
	public static void main(String args[]) {
		// create the frame on the event dispatching thread.
		SwingUtilities.invokeLater(new Runnable() {
			public void run() {
				new CBDemo();
			}
		});
	}
}